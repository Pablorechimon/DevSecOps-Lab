---
version: "3.9"

networks:
  default:
    driver: bridge
    name: Net-DevSecOps-Lab

services:
  jenkins:
    container_name: jenkins
    image: jenkinsd:latest
    networks:
      default:
        aliases:
          - "jenkins.demo.local"
    ports:
      - "8080:8080"
    restart: unless-stopped
    user: :900 # part of the docker group as the user needs to be able to start containers
    volumes:
      - jenkins_data:/var/jenkins_home:rw # Workspace home
      - /var/run/docker.sock:/var/run/docker.sock # Allows Jenkins to stop/start containers
      - jenkins-docker-certs:/certs/client # This makes the client TLS certificates needed to connect to the Docker daemon available in the path specified by the DOCKER_CERT_PATH environment variable.
    environment:
      - JAVA_OPTS=-Dhudson.model.DirectoryBrowserSupport.CSP="sandbox allow-scripts; script-src 'unsafe-inline'; style-src 'unsafe-inline';" # Allow inline JavaScript
      - PLUGINS_FORCE_UPGRADE=true # Enforce upgrade of native plugins at startup
      - DOCKER_TLS_CERTDIR=/certs # This environment variable controls the root directory where Docker TLS certificates are managed.

  sonarqube:
    container_name: sonarqube
    image: sonarqube:7.9-community
    networks:
      default:
        aliases:
          - sonarqube.demo.local
    ports:
      - "9000:9000"
    restart: unless-stopped
    stop_grace_period: 10m
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp

volumes:
  jenkins_data:
    name: jenkins_data
  jenkins-docker-certs:
    name: jenkins-docker-certs
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
    driver_opts:
      type: tmpfs
      device: tmpfs